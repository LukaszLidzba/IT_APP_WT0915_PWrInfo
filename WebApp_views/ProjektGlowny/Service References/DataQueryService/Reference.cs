//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjektGlowny.DataQueryService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeansOfficeInfo", Namespace="http://schemas.datacontract.org/2004/07/Zedd.Dto")]
    [System.SerializableAttribute()]
    public partial class DeansOfficeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProjektGlowny.DataQueryService.Department DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpeningHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProjektGlowny.DataQueryService.Department Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpeningHours {
            get {
                return this.OpeningHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.OpeningHoursField, value) != true)) {
                    this.OpeningHoursField = value;
                    this.RaisePropertyChanged("OpeningHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/Zedd.Dto")]
    [System.SerializableAttribute()]
    public partial class Department : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LibraryInfo", Namespace="http://schemas.datacontract.org/2004/07/Zedd.Dto")]
    [System.SerializableAttribute()]
    public partial class LibraryInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpeningHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpeningHours {
            get {
                return this.OpeningHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.OpeningHoursField, value) != true)) {
                    this.OpeningHoursField = value;
                    this.RaisePropertyChanged("OpeningHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageInfo", Namespace="http://schemas.datacontract.org/2004/07/Zedd.Dto")]
    [System.SerializableAttribute()]
    public partial class MessageInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProjektGlowny.DataQueryService.Departments DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ImportantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProjektGlowny.DataQueryService.Departments Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Important {
            get {
                return this.ImportantField;
            }
            set {
                if ((this.ImportantField.Equals(value) != true)) {
                    this.ImportantField = value;
                    this.RaisePropertyChanged("Important");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Departments", Namespace="http://schemas.datacontract.org/2004/07/Zedd.DataAccess")]
    [System.SerializableAttribute()]
    public partial class Departments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProjektGlowny.DataQueryService.DeansOffices[] DeansOfficesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProjektGlowny.DataQueryService.DeansOffices[] DeansOffices {
            get {
                return this.DeansOfficesField;
            }
            set {
                if ((object.ReferenceEquals(this.DeansOfficesField, value) != true)) {
                    this.DeansOfficesField = value;
                    this.RaisePropertyChanged("DeansOffices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeansOffices", Namespace="http://schemas.datacontract.org/2004/07/Zedd.DataAccess")]
    [System.SerializableAttribute()]
    public partial class DeansOffices : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProjektGlowny.DataQueryService.Departments DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpeningHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProjektGlowny.DataQueryService.Departments Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpeningHours {
            get {
                return this.OpeningHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.OpeningHoursField, value) != true)) {
                    this.OpeningHoursField = value;
                    this.RaisePropertyChanged("OpeningHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventInfo", Namespace="http://schemas.datacontract.org/2004/07/Zedd.Dto")]
    [System.SerializableAttribute()]
    public partial class EventInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProjektGlowny.DataQueryService.Department DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProjektGlowny.DataQueryService.Department Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationDate {
            get {
                return this.NotificationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationDateField, value) != true)) {
                    this.NotificationDateField = value;
                    this.RaisePropertyChanged("NotificationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnitInfo", Namespace="http://schemas.datacontract.org/2004/07/Zedd.Dto")]
    [System.SerializableAttribute()]
    public partial class UnitInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/Zedd.Dto")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProjektGlowny.DataQueryService.UnitInfo UnitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProjektGlowny.DataQueryService.UnitInfo Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataQueryService.IDataQueryService")]
    public interface IDataQueryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetDeansOfficeInfo", ReplyAction="http://tempuri.org/IDataQueryService/GetDeansOfficeInfoResponse")]
        ProjektGlowny.DataQueryService.DeansOfficeInfo GetDeansOfficeInfo(int id, System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetDeansOfficeInfo", ReplyAction="http://tempuri.org/IDataQueryService/GetDeansOfficeInfoResponse")]
        System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.DeansOfficeInfo> GetDeansOfficeInfoAsync(int id, System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetLibrary", ReplyAction="http://tempuri.org/IDataQueryService/GetLibraryResponse")]
        ProjektGlowny.DataQueryService.LibraryInfo GetLibrary(int id, System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetLibrary", ReplyAction="http://tempuri.org/IDataQueryService/GetLibraryResponse")]
        System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.LibraryInfo> GetLibraryAsync(int id, System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetMessage", ReplyAction="http://tempuri.org/IDataQueryService/GetMessageResponse")]
        ProjektGlowny.DataQueryService.MessageInfo GetMessage(int id, System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetMessage", ReplyAction="http://tempuri.org/IDataQueryService/GetMessageResponse")]
        System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.MessageInfo> GetMessageAsync(int id, System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetEvent", ReplyAction="http://tempuri.org/IDataQueryService/GetEventResponse")]
        ProjektGlowny.DataQueryService.EventInfo GetEvent(int id, System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetEvent", ReplyAction="http://tempuri.org/IDataQueryService/GetEventResponse")]
        System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.EventInfo> GetEventAsync(int id, System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetUnit", ReplyAction="http://tempuri.org/IDataQueryService/GetUnitResponse")]
        ProjektGlowny.DataQueryService.UnitInfo GetUnit(int id, System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetUnit", ReplyAction="http://tempuri.org/IDataQueryService/GetUnitResponse")]
        System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.UnitInfo> GetUnitAsync(int id, System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetUser", ReplyAction="http://tempuri.org/IDataQueryService/GetUserResponse")]
        ProjektGlowny.DataQueryService.UserInfo GetUser(int id, System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetUser", ReplyAction="http://tempuri.org/IDataQueryService/GetUserResponse")]
        System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.UserInfo> GetUserAsync(int id, System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetDepartment", ReplyAction="http://tempuri.org/IDataQueryService/GetDepartmentResponse")]
        ProjektGlowny.DataQueryService.Department GetDepartment(int id, System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetDepartment", ReplyAction="http://tempuri.org/IDataQueryService/GetDepartmentResponse")]
        System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.Department> GetDepartmentAsync(int id, System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetAllDeansOffices", ReplyAction="http://tempuri.org/IDataQueryService/GetAllDeansOfficesResponse")]
        ProjektGlowny.DataQueryService.DeansOfficeInfo[] GetAllDeansOffices(System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetAllDeansOffices", ReplyAction="http://tempuri.org/IDataQueryService/GetAllDeansOfficesResponse")]
        System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.DeansOfficeInfo[]> GetAllDeansOfficesAsync(System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetLibraries", ReplyAction="http://tempuri.org/IDataQueryService/GetLibrariesResponse")]
        ProjektGlowny.DataQueryService.LibraryInfo[] GetLibraries(System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetLibraries", ReplyAction="http://tempuri.org/IDataQueryService/GetLibrariesResponse")]
        System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.LibraryInfo[]> GetLibrariesAsync(System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetMessages", ReplyAction="http://tempuri.org/IDataQueryService/GetMessagesResponse")]
        ProjektGlowny.DataQueryService.MessageInfo[] GetMessages(System.Guid ticket, System.Nullable<System.DateTime> startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetMessages", ReplyAction="http://tempuri.org/IDataQueryService/GetMessagesResponse")]
        System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.MessageInfo[]> GetMessagesAsync(System.Guid ticket, System.Nullable<System.DateTime> startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetEvents", ReplyAction="http://tempuri.org/IDataQueryService/GetEventsResponse")]
        ProjektGlowny.DataQueryService.EventInfo[] GetEvents(System.Guid ticket, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetEvents", ReplyAction="http://tempuri.org/IDataQueryService/GetEventsResponse")]
        System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.EventInfo[]> GetEventsAsync(System.Guid ticket, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetUnits", ReplyAction="http://tempuri.org/IDataQueryService/GetUnitsResponse")]
        ProjektGlowny.DataQueryService.UnitInfo[] GetUnits(System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetUnits", ReplyAction="http://tempuri.org/IDataQueryService/GetUnitsResponse")]
        System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.UnitInfo[]> GetUnitsAsync(System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetUsers", ReplyAction="http://tempuri.org/IDataQueryService/GetUsersResponse")]
        ProjektGlowny.DataQueryService.UserInfo[] GetUsers(System.Guid ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataQueryService/GetUsers", ReplyAction="http://tempuri.org/IDataQueryService/GetUsersResponse")]
        System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.UserInfo[]> GetUsersAsync(System.Guid ticket);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataQueryServiceChannel : ProjektGlowny.DataQueryService.IDataQueryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataQueryServiceClient : System.ServiceModel.ClientBase<ProjektGlowny.DataQueryService.IDataQueryService>, ProjektGlowny.DataQueryService.IDataQueryService {
        
        public DataQueryServiceClient() {
        }
        
        public DataQueryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataQueryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataQueryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataQueryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ProjektGlowny.DataQueryService.DeansOfficeInfo GetDeansOfficeInfo(int id, System.Guid ticket) {
            return base.Channel.GetDeansOfficeInfo(id, ticket);
        }
        
        public System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.DeansOfficeInfo> GetDeansOfficeInfoAsync(int id, System.Guid ticket) {
            return base.Channel.GetDeansOfficeInfoAsync(id, ticket);
        }
        
        public ProjektGlowny.DataQueryService.LibraryInfo GetLibrary(int id, System.Guid ticket) {
            return base.Channel.GetLibrary(id, ticket);
        }
        
        public System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.LibraryInfo> GetLibraryAsync(int id, System.Guid ticket) {
            return base.Channel.GetLibraryAsync(id, ticket);
        }
        
        public ProjektGlowny.DataQueryService.MessageInfo GetMessage(int id, System.Guid ticket) {
            return base.Channel.GetMessage(id, ticket);
        }
        
        public System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.MessageInfo> GetMessageAsync(int id, System.Guid ticket) {
            return base.Channel.GetMessageAsync(id, ticket);
        }
        
        public ProjektGlowny.DataQueryService.EventInfo GetEvent(int id, System.Guid ticket) {
            return base.Channel.GetEvent(id, ticket);
        }
        
        public System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.EventInfo> GetEventAsync(int id, System.Guid ticket) {
            return base.Channel.GetEventAsync(id, ticket);
        }
        
        public ProjektGlowny.DataQueryService.UnitInfo GetUnit(int id, System.Guid ticket) {
            return base.Channel.GetUnit(id, ticket);
        }
        
        public System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.UnitInfo> GetUnitAsync(int id, System.Guid ticket) {
            return base.Channel.GetUnitAsync(id, ticket);
        }
        
        public ProjektGlowny.DataQueryService.UserInfo GetUser(int id, System.Guid ticket) {
            return base.Channel.GetUser(id, ticket);
        }
        
        public System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.UserInfo> GetUserAsync(int id, System.Guid ticket) {
            return base.Channel.GetUserAsync(id, ticket);
        }
        
        public ProjektGlowny.DataQueryService.Department GetDepartment(int id, System.Guid ticket) {
            return base.Channel.GetDepartment(id, ticket);
        }
        
        public System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.Department> GetDepartmentAsync(int id, System.Guid ticket) {
            return base.Channel.GetDepartmentAsync(id, ticket);
        }
        
        public ProjektGlowny.DataQueryService.DeansOfficeInfo[] GetAllDeansOffices(System.Guid ticket) {
            return base.Channel.GetAllDeansOffices(ticket);
        }
        
        public System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.DeansOfficeInfo[]> GetAllDeansOfficesAsync(System.Guid ticket) {
            return base.Channel.GetAllDeansOfficesAsync(ticket);
        }
        
        public ProjektGlowny.DataQueryService.LibraryInfo[] GetLibraries(System.Guid ticket) {
            return base.Channel.GetLibraries(ticket);
        }
        
        public System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.LibraryInfo[]> GetLibrariesAsync(System.Guid ticket) {
            return base.Channel.GetLibrariesAsync(ticket);
        }
        
        public ProjektGlowny.DataQueryService.MessageInfo[] GetMessages(System.Guid ticket, System.Nullable<System.DateTime> startDate) {
            return base.Channel.GetMessages(ticket, startDate);
        }
        
        public System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.MessageInfo[]> GetMessagesAsync(System.Guid ticket, System.Nullable<System.DateTime> startDate) {
            return base.Channel.GetMessagesAsync(ticket, startDate);
        }
        
        public ProjektGlowny.DataQueryService.EventInfo[] GetEvents(System.Guid ticket, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            return base.Channel.GetEvents(ticket, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.EventInfo[]> GetEventsAsync(System.Guid ticket, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            return base.Channel.GetEventsAsync(ticket, startDate, endDate);
        }
        
        public ProjektGlowny.DataQueryService.UnitInfo[] GetUnits(System.Guid ticket) {
            return base.Channel.GetUnits(ticket);
        }
        
        public System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.UnitInfo[]> GetUnitsAsync(System.Guid ticket) {
            return base.Channel.GetUnitsAsync(ticket);
        }
        
        public ProjektGlowny.DataQueryService.UserInfo[] GetUsers(System.Guid ticket) {
            return base.Channel.GetUsers(ticket);
        }
        
        public System.Threading.Tasks.Task<ProjektGlowny.DataQueryService.UserInfo[]> GetUsersAsync(System.Guid ticket) {
            return base.Channel.GetUsersAsync(ticket);
        }
    }
}
